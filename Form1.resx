<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label7.Text" xml:space="preserve">
    <value>*   (Wildcard) Match any unknown words
OR  Search for either of two terms
-  (Minus) Exclude words from results
"  (Quotes) Exact phrase search
+  Force inclusion of a word
..  (Range) Search within a number range</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjAAAAigAAAI8AAACPAAAAjwAA
        AI8AAACPAAAAjwAAAI8AAACPAAAAkAAAAIkAAAAqAAAAKwAAAIkAAACQAAAAjwAAAI8AAACPAAAAjwAA
        AI8AAACPAAAAjwAAAI8AAACJAAAAIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4AAAD1AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD6AAAAiwAAAAsAAAALAAAAjAAAAPoAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPUAAAA9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgAA
        APUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+QAAAIcAAAAJAAAAFgAAABUAAAAJAAAAiAAA
        APkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA9QAAAD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA8AAAA6wAAAPUAAAD0AAAA9AAAAPQAAAD0AAAA9AAAAPEAAACGAAAACAAAABwAAACzAAAAsQAA
        ABsAAAAJAAAAhwAAAPEAAAD0AAAA9AAAAPQAAAD0AAAA9AAAAPUAAADqAAAAOgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA4AAAA5AAAAOwAAADsAAAA7AAAAOwAAADsAAAA7AAAANQAAAAkAAAAaAAAAtAAA
        AP8AAAD/AAAAsgAAABkAAAAJAAAANQAAADsAAAA7AAAAOwAAADsAAAA7AAAAOwAAADkAAAAOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAARAAAAAAAA
        ACkAAADUAAAA/wAAAP8AAADSAAAAJwAAAAAAAAARAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAA
        AAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAA2wAAANgAAADYAAAA2AAAANgAAADYAAAA2AAA
        ANIAAABdAAAAAAAAADgAAADWAAAA1AAAADYAAAAAAAAAXgAAANIAAADYAAAA2AAAANgAAADYAAAA2AAA
        ANgAAADbAAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAMUAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAOwAAABdAAAAAQAAADIAAAAwAAAAAQAAAF4AAADsAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADEAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAuAAAA6gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOwAAABdAAAAAQAAAAEAAABeAAAA7AAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOoAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAF8AAAD+AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOsAAABeAAAAXwAAAOwAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAF4AAAAAAAAAAAAAAAAAAAAAAAAAmAAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPEAAADxAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAlwAAAAAAAAAAAAAAAAAA
        ABEAAADLAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADKAAAAEQAA
        AAAAAAAAAAAANAAAAO4AAAD/AAAA/wAAAP8AAAD/AAAA+QAAALYAAAB2AAAAcgAAAL0AAAD+AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAMAAAABwAAAAbgAAALYAAAD6AAAA/wAAAP8AAAD/AAAA/wAA
        AO4AAAAzAAAAAAAAAAAAAABmAAAA/wAAAP8AAAD/AAAA/wAAAP8AAACgAAAADQAAAAAAAAAAAAAAHQAA
        AM0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADNAAAAHgAAAAAAAAAAAAAADwAAAKQAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAGYAAAAAAAAAAgAAAJ4AAAD/AAAA/wAAAP8AAAD/AAAA+QAAAEwAAAAAAAAAAAAA
        AAAAAAAAAAAAfgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAHwAAAAAAAAAAAAAAAAAAAAAAAAATQAA
        APoAAAD/AAAA/wAAAP8AAAD/AAAAngAAAAIAAAAYAAAAzwAAAP8AAAD/AAAA/wAAAP8AAAD8AAAAWQAA
        AAAAAAAAAAAAAAAAAAAAAAA7AAAA8QAAAP8AAAD/AAAA/wAAAP8AAADwAAAAOQAAAAAAAAAAAAAAAAAA
        AAAAAABaAAAA/AAAAP8AAAD/AAAA/wAAAP8AAADPAAAAFwAAAEIAAADvAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAACbAAAAAwAAAAAAAAAAAAAAAgAAAGcAAAD2AAAA/wAAAP8AAAD/AAAA/wAAAPYAAABmAAAAAgAA
        AAAAAAAAAAAABAAAAJwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAO8AAABCAAAAfgAAAP4AAAD/AAAA/wAA
        AO0AAAC4AAAAbAAAACcAAAABAAAAAAAAAAEAAABiAAAA7gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AO4AAABiAAAAAQAAAAAAAAABAAAAJwAAAGwAAAC4AAAA7QAAAP8AAAD/AAAA/gAAAH0AAADAAAAA9QAA
        AMUAAAB8AAAANAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAABQAAAKAAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAJ8AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAA0AAAAewAAAMQAAAD1AAAAwAAA
        AHcAAABCAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALwAAAN0AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADcAAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAA
        AEEAAAB2AAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAA
        APkAAAD/AAAA/wAAAP8AAAD/AAAA+QAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAMAAAAqQAAAP8AAAD/AAAA/wAAAP8AAACoAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAvAAAA3QAAAP8AAAD/AAAA3AAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAAAA+QAAAPkAAABnAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAACrAAAAqgAAAAsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAAjAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////n//4AAAB+AAAAfgAAAH4AAAB+AAAAfgCBAH4AQgB8AA
        AAPAAAADwAAAA8AAAAOAAAABgAAAAYBgBgEA8A8AAPAPAABgBgAAQAIAA8ADwB/gB/h/8A/+//AP///4
        H////D////w////+f/////////////////8=
</value>
  </data>
</root>